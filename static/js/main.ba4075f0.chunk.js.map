{"version":3,"sources":["data.js","Detail.js","App.js","serviceWorker.js","index.js"],"names":["id","title","content","price","Box","styled","div","Title","h4","props","color","useState","alert","setAlert","shoes","useParams","correctShoes","find","v","history","useHistory","useEffect","alertTimer","setTimeout","clearTimeout","className","src","Number","width","stock","onClick","setStock","goBack","Info","Card","index","App","Data","setShose","Navbar","bg","expand","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","NavDropdown","Item","href","Divider","exact","path","Jumbotron","Button","variant","map","i","key","axios","get","then","result","data","catch","err","console","log","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.ba4075f0.chunk.js","sourcesContent":["export default [\r\n  {\r\n    id : 0,\r\n    title : \"White and Black\",\r\n    content : \"Born in France\",\r\n    price : 120000\r\n  },\r\n\r\n  {\r\n    id : 1,\r\n    title : \"Red Knit\",\r\n    content : \"Born in Seoul\",\r\n    price : 110000\r\n  },\r\n\r\n  {\r\n    id : 2,\r\n    title : \"Grey Yordan\",\r\n    content : \"Born in the States\",\r\n    price : 130000\r\n  }\r\n] \r\n\r\n// var name = '1';\r\n// var name2 = '2';\r\n\r\n// export {name, name2}","/* eslint-disable */\r\n\r\nimport React, {useEffect, useState} from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport './Detail.scss'\r\nimport Axios from 'axios'\r\n\r\nconst Box = styled.div`\r\n  padding: 20px;\r\n`\r\n\r\nconst Title = styled.h4`\r\n  font-size: 25px;\r\n  color: ${props => props.color};\r\n`\r\n\r\nexport default (props) => {\r\n\r\n  const [alert, setAlert] = useState(true)\r\n  const shoes = [...props.shoes]\r\n  const {id} = useParams()\r\n  const correctShoes = shoes.find((v) => {\r\n    return v.id == id \r\n  })\r\n  const history = useHistory()\r\n\r\n  // mount, update\r\n  useEffect(() => {\r\n\r\n    // axios.get()\r\n\r\n    const alertTimer = setTimeout(() => {\r\n      setAlert(!alert)\r\n    }, 2000)\r\n\r\n    // unmount\r\n    return () => { clearTimeout(alertTimer) }\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Box>\r\n        {/* <Title color={'dodgerblue'}>Detail</Title> */}\r\n        {/* <Title color='dodgerblue'>Detail</Title> */}\r\n        <Title className=\"red\">Detail</Title>\r\n      </Box>\r\n\r\n      {\r\n        alert === true\r\n        ? <div className=\"my-alert2\">\r\n            <p>재고가 얼마 남지 않았습니다.</p>\r\n          </div> \r\n        : null \r\n      }    \r\n    \r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <img src={`https://codingapple1.github.io/shop/shoes${Number(id)+1}.jpg`} width=\"100%\"></img>\r\n        </div>\r\n        <div className=\"col-md-6 mt-4\">\r\n          <h4 className=\"pt-5\">{correctShoes.title}</h4>\r\n          <p>{correctShoes.content}</p>\r\n          <p>{correctShoes.price}</p>\r\n\r\n          <Info stock={props.stock} id={correctShoes.id}></Info>\r\n\r\n          <button className=\"btn btn-danger mr-1\" onClick={()=>{\r\n            let stock = [...props.stock]\r\n            stock[correctShoes.id] = props.stock[correctShoes.id] - 1\r\n            props.setStock(stock)\r\n          }}>주문하기</button>\r\n          <button className=\"btn btn-danger\" onClick={history.goBack}>뒤로가기</button>\r\n          {/* <button className=\"btn btn-danger\" onClick={() => history.push('/a')}>뒤로가기</button> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Info = (props) => {\r\n  return <p>재고: {props.stock[props.id]}</p>\r\n}\r\n\r\n// class style component example\r\n{\r\n  /*\r\n  class Detail2 extends React.Component {\r\n\r\n    // 컴포넌트가 Mount 되었을때 실행\r\n    componentDidMount(){\r\n  \r\n    }\r\n  \r\n    // 컴포넌트가 사라질때 \r\n    componentWillUnmount(){\r\n  \r\n    }\r\n  }\r\n  */\r\n}\r\n","/* eslint-disable */\n\nimport React, {useState}from 'react'\nimport {Navbar, Nav, NavDropdown, Jumbotron, Button} from 'react-bootstrap'\nimport './App.css'\nimport Data from './data'\nimport {Link, Route, Switch} from 'react-router-dom'\nimport Detail from './Detail'\nimport axios from 'axios'\n\nfunction App() {\n\n  const [shoes, setShose] = useState(Data);\n  const [stock, setStock] = useState([10, 11, 12])\n\n  return (\n  <div className='App'>\n  \n  <Navbar bg=\"light\" expand=\"lg\" className=''>\n    <Navbar.Brand as={Link} to=\"/\">ShoeShop</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav className=\"ml-auto\">\n        <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n        <Nav.Link as={Link} to=\"/detail/0\">Detail</Nav.Link>\n        <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n          <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n          <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n          <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n          <NavDropdown.Divider />\n          <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n        </NavDropdown>\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n\n  <Switch>\n    <Route exact path='/CA_SHOP'>\n      <Jumbotron className=\"background\">\n        <h1>20% Season OFF</h1>\n        <p>\n          This is a simple hero unit, a simple jumbotron-style component for calling\n          extra attention to featured content or information.\n        </p>\n        <p>\n          <Button variant=\"primary\">Learn more</Button>\n        </p>\n      </Jumbotron>\n\n      <div className='container'>\n        <div className=\"row\">\n          {\n            shoes.map((v, i)=>{\n              return <Card shoes={v} index={i+1} key={i}/>\n            })\n          }\n        </div>\n        <button className=\"btn btn-primary\" onClick={()=>{\n          // axios.post('서버URL', {id:'codingapple', pw:1234})\n\n          // fetch('https://codingapple1.github.io/shop/data2.json').then()\n          axios.get('https://codingapple1.github.io/shop/data2.json')\n          .then((result)=>{\n            setShose([...shoes, ...result.data]);\n          })\n          .catch((err)=>{console.log(err)})\n        }}>더보기</button>\n      </div>  \n    </Route>\n\n    <Route path='/detail/:id'>\n      <Detail shoes={shoes} stock={stock} setStock={setStock}/>\n    </Route>\n\n    {/* <Route path=\"/:id\">\n      <div>아무거나 적었을때 보여줌</div>\n    </Route> */}\n\n    {/* <Route path=\"/some\" component={Card}></Route> */}\n  </Switch>\n  \n  </div>\n  );\n}\n\nconst Card = (props) => {\n  const shoes = {...props.shoes}\n  const index = props.index\n\n  return(\n    <div className=\"col-md-4\">\n      <img src={`https://codingapple1.github.io/shop/shoes${index}.jpg`} width=\"100%\"/>\n      <h4>{shoes.title}</h4>\n      <p>{shoes.content}&{shoes.price}</p>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {BrowserRouter} from 'react-router-dom'\n// import {HashRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}