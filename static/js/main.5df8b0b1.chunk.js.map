{"version":3,"sources":["data.js","Cart.js","App.js","serviceWorker.js","index.js"],"names":["id","title","content","price","connect","memo","props","useEffect","console","log","state","reducer","alertState","alertReducer","className","Table","responsive","map","v","i","quan","key","name","onClick","dispatch","type","data","alertClose","Detail","lazy","stockContext","React","createContext","Card","useContext","shoes","index","history","useHistory","push","src","width","Test","stock","App","useState","Data","setShose","setStock","more","setMore","Navbar","bg","expand","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","NavDropdown","Item","exact","path","Jumbotron","Button","variant","Provider","value","axios","get","then","result","catch","err","_shoes","fallback","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","initState","store","createStore","combineReducers","action","indexNum","findIndex","payload","_state","ReactDOM","render","basename","process","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5df8b0b1.chunk.js","sourcesContent":["export default [\r\n  {\r\n    id : 0,\r\n    title : \"White and Black\",\r\n    content : \"Born in France\",\r\n    price : 120000\r\n  },\r\n\r\n  {\r\n    id : 1,\r\n    title : \"Red Knit\",\r\n    content : \"Born in Seoul\",\r\n    price : 110000\r\n  },\r\n\r\n  {\r\n    id : 2,\r\n    title : \"Grey Yordan\",\r\n    content : \"Born in the States\",\r\n    price : 130000\r\n  }\r\n] \r\n\r\n// var name = '1';\r\n// var name2 = '2';\r\n\r\n// export {name, name2}","import React, { useEffect, memo } from 'react';\r\nimport {Table} from 'react-bootstrap'\r\nimport {connect} from 'react-redux'\r\n\r\nimport './Detail.scss'\r\n\r\nconst Cart = (props) => {\r\n\r\n  const alertClose = (v) => {\r\n    props.dispatch({type: '수량감소',  data: v.id})\r\n  }\r\n\r\n  return (\r\n    <div className=\"table\">\r\n      <Table  responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>상품명</th>\r\n            <th>수량</th>\r\n            <th>변경</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            props.state.map((v, i) => {\r\n              if(v.quan > 0){\r\n                return (\r\n                  <tr key={i}>\r\n                    <td>{v.id}</td>\r\n                    <td>{v.name}</td>\r\n                    <td>{v.quan}</td>\r\n                    <td>\r\n                      <button onClick={()=>{ props.dispatch({type: '수량증가', data: v.id}) }}>+</button>\r\n                      <button className=\"ml-1\" onClick={()=>{ props.dispatch(alertClose(v)) }}>-</button>\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              }else{\r\n                return null\r\n              }\r\n             \r\n            })\r\n          }\r\n        </tbody>\r\n      </Table>\r\n\r\n      {\r\n        props.alertState === true\r\n        ? <div className=\"my-alert2\">\r\n            <p>\r\n              지금 구매하시면 신규할인 20% \r\n              <button className=\"x-button float-right\" onClick={()=>{props.dispatch({type: 'alertClose'})}}>&times;</button>\r\n            </p>\r\n            \r\n          </div>\r\n        : null\r\n      }\r\n\r\n      {/* <Parent 이름=\"정영훈\" 나이=\"32\"/> */}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst Parent = (props) => {\r\n  console.log(props)\r\n  return (\r\n    <div>\r\n      <Child1 이름={props.이름}></Child1>\r\n      <Child2 나이={props.나이}></Child2>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Child1 = (props) => {\r\n  useEffect(() => {console.log('랜더링됨1')})\r\n  return <div>1111</div>\r\n}\r\n\r\nconst Child2 = memo((props) => {\r\n  useEffect(() => {console.log('랜더링됨2')})\r\n  return <div>2222</div>\r\n})\r\n\r\n\r\n\r\nconst stateToProps = (state) => {\r\n  return {\r\n    state: state.reducer,\r\n    alertState: state.alertReducer\r\n  }\r\n}\r\n\r\nexport default connect(stateToProps)(Cart)\r\n\r\n// export default Cart","/* eslint-disable */\n\nimport React, {useState, useContext, lazy, Suspense}from 'react'\nimport {Navbar, Nav, NavDropdown, Jumbotron, Button} from 'react-bootstrap'\nimport './App.css'\nimport Data from './data'\nimport {Link, Route, Switch, useHistory} from 'react-router-dom'\n// import Detail from './Detail'\nlet Detail = lazy(() => import('./Detail'))\nimport axios from 'axios'\nimport Cart from './Cart'\n\nexport const stockContext = React.createContext();\n\nfunction App() {\n\n  const [shoes, setShose] = useState(Data);\n  const [stock, setStock] = useState([10, 11, 12])\n  const [more, setMore] = useState(0)\n\n  return (\n  <div className='App'>\n  \n  <Navbar bg=\"light\" expand=\"lg\" className=''>\n    <Navbar.Brand as={Link} to=\"/\">ShoeShop</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav className=\"ml-auto\">\n        <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n        <NavDropdown title=\"Detail\" id=\"basic-nav-dropdown\">\n          <NavDropdown.Item as={Link} to=\"/detail/0\">Detail-0</NavDropdown.Item>\n          <NavDropdown.Item as={Link} to=\"/detail/1\">Detail-1</NavDropdown.Item>\n          <NavDropdown.Item as={Link} to=\"/detail/2\">Detail-2</NavDropdown.Item>\n        </NavDropdown>\n        <Nav.Link as={Link} to=\"/cart\">Cart</Nav.Link>\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n\n  <Switch>\n    <Route exact path='/'>\n      <Jumbotron className=\"background\">\n        <h1>20% Season OFF</h1>\n        <p>\n          This is a simple hero unit, a simple jumbotron-style component for calling\n          extra attention to featured content or information.\n        </p>\n        <p>\n          <Button variant=\"primary\">Learn more</Button>\n        </p>\n      </Jumbotron>\n\n      <div className='container'>\n        <stockContext.Provider value={stock}>\n          <div className=\"row\">\n            {\n              shoes.map((v, i)=>{\n                return <Card shoes={v} index={i+1} key={i}/>\n              })\n            }\n          </div>\n        </stockContext.Provider>\n        {\n          more === 0 \n          ? <button className=\"btn btn-primary\" onClick={()=>{\n              setMore(1);\n              // axios.post('서버URL', {id:'codingapple', pw:1234})\n    \n              // fetch('https://codingapple1.github.io/shop/data2.json').then()\n              axios.get('https://codingapple1.github.io/shop/data2.json')\n              .then((result)=>{\n                setShose([...shoes, ...result.data]);\n              })\n              .catch((err)=>{console.log(err)})\n            }}>더보기</button>\n          : <button className=\"btn btn-primary\" onClick={()=>{\n              setMore(0);\n              let _shoes = []\n              _shoes.push(shoes[0])\n              _shoes.push(shoes[1])\n              _shoes.push(shoes[2])\n              setShose(_shoes)\n          }}>닫기</button>\n        }\n     \n      </div>  \n    </Route>\n\n    <Route path='/detail/:id'>\n      <stockContext.Provider value={stock}>\n        <Suspense fallback={<div>Loding...</div>}>\n          <Detail shoes={shoes} stock={stock} setStock={setStock}/>\n        </Suspense>\n      </stockContext.Provider>  \n    </Route>\n\n    <Route path='/cart'>\n      <Cart />\n    </Route>\n\n    {/* <Route path=\"/:id\">\n      <div>아무거나 적었을때 보여줌</div>\n    </Route> */}\n\n    {/* <Route path=\"/some\" component={Card}></Route> */}\n  </Switch>\n  \n  </div>\n  );\n}\n\nconst Card = (props) => {\n  const stock = useContext(stockContext)\n  const shoes = {...props.shoes}\n  const index = props.index\n  const history = useHistory()\n\n  return(\n    <div className=\"col-md-4 shoe-card\" onClick={()=>{history.push(`/detail/${shoes.id}`)}}>\n      <img src={`https://codingapple1.github.io/shop/shoes${index}.jpg`} width=\"100%\"/>\n      <h4>{shoes.title}</h4>\n      <p>{shoes.content} & {shoes.price}</p>\n      <Test i={index-1}></Test>\n    </div>\n  )\n}\n\nconst Test = (props) => {\n  const stock = useContext(stockContext)\n  return <p>재고 : {stock[props.i] ? stock[props.i] : 0}</p>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// @babel/polyfill\n// import 'core-js/stable';\n// import 'regenerator-runtime/runtime';\n\n// IE11의 경우\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom'; \nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {BrowserRouter} from 'react-router-dom'\n// import {HashRouter} from 'react-router-dom'\n\nimport {Provider} from 'react-redux'\nimport { createStore, combineReducers } from 'redux';\n\nlet alertState = true\n\nlet alertReducer = (state = alertState, action) => {\n  if(action.type === 'alertClose'){\n    state = false\n    return state\n  }else{\n    return state\n  }\n}\n\nlet initState = [\n  {\n    id:0,\n    name: 'White and Black',\n    quan: 0 \n  },\n  {\n    id:1,\n    name: 'Red Knit',\n    quan: 0 \n  },\n  {\n    id:2,\n    name: 'Grey Yordan',\n    quan: 0 \n  }\n]\n\nlet reducer = (state = initState, action) => {\n  if(action.type === 'addList'){\n    const indexNum = state.findIndex((v)=>{\n      return v.id === action.payload.id\n    })\n    if(indexNum >= 0){\n      let _state = [...state]\n      _state[indexNum].quan++\n      return _state    \n    }else{\n      let _state = [...state]\n      _state.push(action.payload)\n      return _state\n    }\n  }else if(action.type === '수량증가'){\n    let _state = [...state]\n    _state[action.data].quan++\n    return _state\n  }else if(action.type === '수량감소'){\n    let _state = [...state]\n    if(_state[action.data].quan > 0) _state[action.data].quan--\n    return _state\n  }else{\n    return state\n  }\n}\n\nlet store = createStore(combineReducers({reducer, alertReducer}))\n\n\nReactDOM.render(\n  // <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}